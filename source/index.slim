.main-content
  section#single-blog-post
    h2 Conditionally Adding Active Nav States with Ruby in Middleman
    h3 Posted on August 5th 2013
    p
      ' While working on my personal site recently, I ran into a problem with
      ' adding an active class via a link being clicked in my main navigation.
      ' Using just plain ol' jQuery provided a way to add an "active" class based on a click event,
      ' however, everytime a new page loaded, the DOM would refresh and I would lose the
      ' active state almost immediately.
    p
      ' After a bit of research, I decided this would be best handled with one of Middleman's
      ' built in 
      a href="http://rubydoc.info/github/middleman/middleman/Middleman/Sitemap/InstanceMethods:current_page" 
        | current_page
      '  variable
    p
      ' More specifically:
      ul
        li
          code
            | current_page.path
          ' which will return the path relative to the source directory (eg. if you have an about.html 
          ' file in your source folder, this will return about.html).
        li
          code
            | current_page.url
          ' which will return the path without the actual directory indexy (eg. if you are in the path 
          ' about/index.html, only about will be returned).
    p
      ' So, armed with this knowledge and a simple if statement, lets dive into some code:

    pre
      .code-wrap
        code data-language="html"
          ' <ul class="nav">
              <li>
                <a href="/" class="&#35;{'active' if current_page.url == '/'}">Home</a>
              </li>
              <li>
                <a href="resume.html" class="&#35;{'active' if current_page.url == 'resume.html'}">Resume</a>
              </li>
              <li>
                <a href="blog.html" class="&#35;{'active' if current_page.url == 'blog.html'}">Blog</a>
              </li>
            </ul>
    p
      ' With the code above, we are simply conditionally adding the "active" class to any of the links
      ' if the path in the url matches the correct criteria. With this approach we don't have to worry
      ' about the DOM getting flushed out everytime a link is clicked, since the behavior is tied to the
      ' current url in the browser's address bar.

    p
      ' Feel free to send any comments, questions or improvements
      a href="mailto: ryanmunger@gmail.com"
        | here
      | .
